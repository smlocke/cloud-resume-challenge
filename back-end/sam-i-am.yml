AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge

  SAM the things you need to SAM, not every damn thing

Globals:
  Function:
    Timeout: 30

Parameters: 
  DomainNameParameter:
    Type: String
    Description: What's the root domain name of the website?
    Default: "example.com"
  SubDomainNameParameter:
    Type: String
    Description: What subdomain/API stage are we playing with?
    Default: "dev"
  FunctionNameParameter:
    Type: String
    Description: What do you want to call the lambda counting function?
    Default: "count-ha-ha"
  TableNameParameter:
    Type: String
    Description: What do you want to call your DynamoDB table?
    Default: "count-02"

Resources: 
  MyDynamoDBTable:
    Type: "AWS::DynamoDB::Table"
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
        TableName: !Ref TableNameParameter
        BillingMode: "PAY_PER_REQUEST"
        AttributeDefinitions: 
          - AttributeName: "PK"
            AttributeType: "N"
        KeySchema: 
          - AttributeName: "PK"
            KeyType: "HASH"

  MyLambdaFunction:
    Type: AWS::Serverless::Function
    Description: "A function to count visitors to a website."
    Properties:
      Environment:
        Variables:
          TABLE_NAME: !Ref TableNameParameter
      FunctionName: !Ref FunctionNameParameter
      Handler: !Sub "${FunctionNameParameter}.lambda_handler"
      CodeUri: count-function/
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref MyDynamoDBTable
      Runtime: "python3.9"
      Tracing: Active
      Events:
        ApiEvent:
          Type: HttpApi 
          Properties:
            Path: /count
            Method: GET

Outputs:
  MyCountingAPI:
    Description: "API Gateway endpoint URL for the counting function."
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/${SubDomainNameParameter}"
  MyCountingFunction:
    Description: "ARN of the counting function."
    Value: !GetAtt MyLambdaFunction.Arn
